@node Installation
@chapter Installation

@menu
* Download::                    
* Linux Installation::          
* Mac OSX Installation::        
* Windows (cygwin)::            
* Windows (Visual Studio)::     
* Configure Options::           
* Structure of distribution::   
@end menu


@node Download
@section Download

@subsection Stable(-ish) Version

(@i{Important Note: Marsyas does not use CVS and therefore the CVS repository 
is out of date})

Marsyas is hosted at SourceForge:

@ifnothtml
http://marsyas.sourceforge.net/
@end ifnothtml

@ifnothtml
http://www.sourceforge.net/projects/marsyas   
@end ifnothtml

@html 
<a href=''http://www.sourceforge.net/projects/marsyas''>
http://www.sourceforget.net/projects/marsyas </a> 
@end html

@html 
<a href=''http://marsyas.sourceforge.net''>
http://marsyas.sourceforge.net </a> 
@end html

Marsyas is open source software and is distributed 
as a tar ball (something like marsyas-0.2.8.tar.gz). 

To extract the source file type: 

@example 
tar -zxvf marsyas-0.2.8.tar.gz 
@end example

This will create a subdirectory of the current 
directory called marsyas-0.2.8 that contains 
all the source files needed for compiling Marsyas. 


@subsection Development Version

For the brave, the latest (possibly unstable!) version can be
obtained from the subversion repository stored at the sourceforge website.
To check out a working copy do:

@example 
svn co https://svn.sourceforge.net/svnroot/marsyas/trunk marsyas-0.2.8 
@end example

You can replace marsyas-0.2.8 with any directory you want. The 
version/release (version 0.2 release 8) is independently assigned 
from subversion revisions and the latest can be found by checking 
the sourceforge website. 

@c  this info isn't necessary
@ignore
Installation is the biggest source of grief for first time users of
Marsyas and the main source of email questions. Significant
improvements in the installation process have been made 
with the latest releases. (after marsyas-0.2.2). The following
operating systems are supported in roughly the following order (from
more complete support to less): Linux, MacOS X, Windows (cygwin),
Windows (Visual Studio). If you want to use the full functionality 
of Marsyas and have frequent updates and support you are strongly 
encouraged to use Linux. 
@end ignore

@c  This is good info, but not at this place in the docs.
@ignore
There is a lot of work behind the development of Marsyas. Although
Marsyas is and will remain free software, any form of financial or
hardware support is more than welcome.  The sourceforge page contains
a link for people to donate money to the project and any contribution
is welcome and will help further improve the framework. 
@end ignore


@node Linux Installation
@section Linux Installation 

@cindex Linux

Marsyas is mainly developed under Linux so installing 
under Linux is quite straightforward and can be done using 
the standard autoconf installation steps where > is whatever 
command-line prompt you have on your system. 

@example
./configure 
make 
make install                 (as root user)
@end example

By default Marsyas assumes that in Linux systems the ALSA sound system
and corresponding library and headers are installed.  Most new Linux
distribution are using ALSA.


In addition there are several configure options that 
can be used to enable/disable assertions, enable/disable debugging 
and include optional packages such as support for reading mp3s. 
@xref{Configure Options}.  


@node Mac OSX Installation
@section Mac OSX Installation

@cindex Mac OSX

Installation under OS X is almost identical to Linux. The developer
tools are not installed by default so you will need to install them. 
You can download XCode from the Apple Developer website. You can 
check whether they are installed or not by checking that you 
can run gcc on a terminal. Once gcc is installed then you can compile 
using the standard autoconf procedure:

@example 
./configure 
make 
make install                         (as root user)
@end example 

In addition there are several configure options that 
can be used to enable/disable assertions, enable/disable debugging 
and include optional packages such as support for reading mp3s. 
@xref{Configure Options}.  

@node Windows (cygwin)
@section Windows (cygwin)
@cindex Cygwin

Installation under Windows using the cygwin environment and gcc is
similar to Linux. The most recent version of Marsyas 0.2 use RtAudio
for audio playback under Cygwin. In order to compile RtAudio you will
need to have the DirectX SDk installed. The standard autoconf
installation procedure is used:

@example 
./configure 
make 
make install                         (as root user)
@end example 

In general, cygwin is not supported as well as Linux and OS X. 


@node Windows (Visual Studio)
@section Windows (Visual Studio)
@cindex Windows

Installation under Visual Studio is still under construction and not
the full functionality of Marsyas 0.2 is supported.  Not all the
executables are supported. The main distribution contains two
subdirectories named marsyasVisualStudio2003, marsyasVisualStudio2005
that contain the necessary project solution files for compiling
Marsyas under Visual Studio. I have only tested this using Visual
Studio 7.0 under Windows XP. Older version of Visual Studio might not
work. Support of the Windows port is not as good as Linux and OS X.

@node Configure Options
@section Configure Options

Marsyas can be customized using various configuration 
options. In autoconf systems (Linux, OSX, Cygwin) 
this done in the standard way through the .configure 
script. For example to compile Marsyas with assertions 
enabled and with mp3 support through libmad one would do: 

@example 
./configure --enable-assert --enable-mad
make 
make install                         (as root user)
@end example 


@noindent The list of available options can be viewed by: 

@example 
./configure --help 
@end example


@noindent The following options are supported: 

@itemize
@item @b{--enable-assert}       turns assertions on (small performance penatly) 
@item @b{--enable-debug}        compiles Marsyas in debug mode generating
the necessary files for gdb (large performance penalty) 
@item @b{--enable-mad}          enables support for reading mp3 files using
libmad (which must be installed) 
@item @b{--enable-distributed}  compiles code for distributed audio
feature extraction (experimental) 
@item @b{--enable-readline}     realine support for the Marsyas Scripting
Language (msl) 
@item @b{--enable-oss}          use the OSS sound system 
@end itemize


A set of optional graphical user interfaces written in QT 4
@cindex QT4 
are also included in the distribution in the qt4GUIs subdirectory. 
If Qt4 is installed on your machine and you have installed 
Marsyas on your system you can compile the various GUIs 
by doing (replace MarPlayer with the specific GUI you want compiled)
(these GUIs have only been tested under Linux and are currently under 
major development so use at your own risk): 

@example
cd qt4GUIs/MarPlayer
qmake 
make 
@end example


@noindent A frequent variation (if you don't have root priviledges) 
is to install Marsyas in your home directory (replace /home/gtzan with 
the appropriate path for your home directory). 
This can be accomplished by doing: 


@example
./configure --prefix=/home/gtzan 
make 
make install 
@end example


@node Structure of distribution
@section Structure of distribution 

Marsyas is primarily targeted to researchers and software 
developers who want to build new systems and applications 
using existing building blocks. Therefore familiarity 
with the directory structure of the Marsyas distribution 
is important for any serious work with the framework. 

The main marsyas directory consists of the following 
important files: 

@itemize
@item @b{INSTALL, COPYING, THANKS, README, AUTHORS, TODO:} text
files with important information. 
@item @b{ChangeLog:} the change log is not maintained as consistently 
as it should be but it still provides useful information about the 
evolution of the software. 
@item @b{configure.in, Makefile.am:} the main files edited by 
the user/programmer that are required for the autotools. You will 
only need to edit these if you are adding new subdirectories 
or configuration options to the distribution. 
@end itemize 


@noindent
In addition there are the following subdirectories: 

@itemize 
@item @b{marsyas:} the main directory containing all the 
important source code of Marsyas. The source files in this 
subdirectory are compiled into a static library that other 
programs can use to access Marsyas functionality. 

@item @b{src:} this subdirectory contains several 
sample executables that do various interesting things 
using the Marsyas software framework. Some of them are intended 
to be used as actual research tools others are more demonstration.
All new Marsyas users should browse at least some of the source
code here.

@c  We use doxygen?  Really!?  check.  -gp
@item @b{doc:} contains both the user manual (which you are 
currently reading) as well as the source code documentation
that is generated using doxygen. To regenerate the manual in pdf
or html type (in the doc subdirectory)

@example 
make pdf 
make html 
@end example 

@c @item @b{rawwaves:} contains some raw sound files that can be used
@c to test the sample executables in src/.

@item @b{qt4GUIs:} provides GUI interfaces using QT4. These will not
work with earlier versions of QT. You must have QT4 installed in order
to use or compile these applications. A README file is supplied with
each one that has instructions on how to compile and run it.

@item @b{config:} configuration files used by autotools.

@item @b{distributed:} Experimental Marsyas classes for
distributed processing.

@item @b{marsyasMATLAB:} User MATLAB scripts (mfiles).

@item @b{marsyasVisualStudio2003:}
Project and Solution files for Visual Studio 2003

@item @b{marsyasVisualStudio2005:}
Project and Solution files for Visual Studio 2005

@end itemize 


