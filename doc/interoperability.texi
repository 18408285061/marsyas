@node Interoperability
@chapter Interoperability

Intro text

@menu
* Audio and MIDI::              
* WEKA::                        
* MATLAB::                      
* Python::                      
* Trolltech Qt4::               
* OCaml::                       
@end menu


@node Audio and MIDI
@section Audio and MIDI

@itemize @bullet
@item
@strong{RtAudio}: Multiplatform C++ API for realtime audio input/output 

@itemize @minus
@item Linux (native ALSA, JACK, and OSS) 
@item MacOSX@copyright{}
@item Windows@copyright{} (DirectSound@copyright{} and ASIO@copyright{}) 
@item SGI@copyright{} 
@end itemize

@item
@strong{RtMIDI}: Multiplatform C++ API for realtime MIDI input/output 

@itemize @minus
@item Linux (ALSA) 
@item MacOSX@copyright{} 
@item Windows@copyright{}
@item SGI@copyright{}
@end itemize

@end itemize

@uref{http://www.music.mcgill.ca/~gary/rtaudio/}

@uref{http://www.music.mcgill.ca/~gary/rtmidi/}



@c @n ode Open Sound Control (OSC)
@c @s ection Open Sound Control (OSC)



@node WEKA
@section WEKA

It @emph{can} be done; read the source code.

@node MATLAB
@section MATLAB

It @emph{can} be done; read the source code.

@node Python
@section Python

It @emph{can} be done; read the source code.

@node Trolltech Qt4
@section Trolltech Qt4

To get started, look at the tutorial files:

@examplefilenewpage{tutorial.pro}
@examplefilenewpage{main.cpp}
@examplefilenewpage{mainwindow.h}
@examplefilenewpage{mainwindow.cpp}
@examplefilenewpage{backend.h}
@examplefilenewpage{backend.cpp}

After examining that project, see @file{apps/Qt4Apps/MarPlayer/}, followed by
the other examples in the @file{apps/Qt4Apps/} directory.


@node OCaml
@section OCaml

To combine Marsyas and OCaml, see the MarsyasOCaml documentation at
@uref{http://www.cs.uvic.ca/~inb/work/marsyasOCaml/}


