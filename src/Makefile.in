# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
Audio = @Audio@
CC = @CC@
CXX = @CXX@
DISTRIBUTED = @DISTRIBUTED@
HAVE_LIB = @HAVE_LIB@
Includes = @Includes@
LIB = @LIB@
LTLIB = @LTLIB@
Libs = @Libs@
MADLIB = @MADLIB@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
MRSSWIG = @MRSSWIG@
MslLibs = @MslLibs@
OGGLIB = @OGGLIB@
PACKAGE = @PACKAGE@
QASSISTANTCLIENT_LDADD = @QASSISTANTCLIENT_LDADD@
QEMBED = @QEMBED@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_GUILINK = @QT_GUILINK@
QT_LDADD = @QT_LDADD@
RANLIB = @RANLIB@
UIC = @UIC@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@

SUBDIRS = plugins tcl

MAINTAINERCLEANFILES = Makefile.in

EXTRA_DIST = tests.txt pvocJazz pvoc.bat dha2dhin2.txt netExtract.ms pvoc.ms

INCLUDES = -I$(top_builddir) -I$(top_builddir)/marsyas                 -I$(top_srcdir) -I$(top_srcdir)/marsyas -I$(Includes)


bin_PROGRAMS = sfinfo sfplugin sfplay extract bextract 		  mkcollection phasevocoder 		  pitchextract sfplaygui tempo 		  server textract msl tutorial 		  ERBTest marsyasTests 		  SeneffEarTest record 		  drumExtract mixer mugle classifyFile midiTest 		  LPCExample 


sfinfo_SOURCES = sfinfo.cpp 
sfinfo_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


sfplay_SOURCES = sfplay.cpp 
sfplay_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


tutorial_SOURCES = tutorial.cpp 
tutorial_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     	$(Libs)


tempo_SOURCES = tempo.cpp 
tempo_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


sfplugin_SOURCES = sfplugin.cpp 
sfplugin_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


phasevocoder_SOURCES = phasevocoder.cpp 
phasevocoder_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


pitchextract_SOURCES = pitchextract.cpp 
pitchextract_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			   $(Libs)


extract_SOURCES = extract.cpp 
extract_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		       $(Libs)


bextract_SOURCES = bextract.cpp 
bextract_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		  	$(Libs)


sfplaygui_SOURCES = sfplaygui.cpp 
sfplaygui_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs)


mkcollection_SOURCES = mkcollection.cpp 
mkcollection_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs)


server_SOURCES = server_main.cpp 
server_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs)


textract_SOURCES = textract.cpp 
textract_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs)


msl_SOURCES = msl.cpp 
msl_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs) $(MslLibs)


ERBTest_SOURCES = ERBTest.cpp
ERBTest_LDADD = $(top_builddir)/marsyas/libmarsyas.a 			$(Libs)


marsyasTests_SOURCES = marsyasTests.cpp 
marsyasTests_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


SeneffEarTest_SOURCES = SeneffEarTest.cpp 
SeneffEarTest_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


record_SOURCES = record.cpp 
record_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


drumExtract_SOURCES = drumExtract.cpp 
drumExtract_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		     $(Libs)


mixer_SOURCES = mixer.cpp 
mixer_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		    $(Libs)


mugle_SOURCES = mugle.cpp 
mugle_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		    $(Libs)


classifyFile_SOURCES = classifyFile.cpp 
classifyFile_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		    $(Libs)


midiTest_SOURCES = midiTest.cpp 
midiTest_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		    $(Libs)


LPCExample_SOURCES = LPCExample.cpp 
LPCExample_LDADD = $(top_builddir)/marsyas/libmarsyas.a 		    $(Libs)

mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = ../marsyas/config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../marsyas
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
sfinfo_OBJECTS =  sfinfo.o
sfinfo_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
sfinfo_LDFLAGS = 
sfplugin_OBJECTS =  sfplugin.o
sfplugin_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
sfplugin_LDFLAGS = 
sfplay_OBJECTS =  sfplay.o
sfplay_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
sfplay_LDFLAGS = 
extract_OBJECTS =  extract.o
extract_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
extract_LDFLAGS = 
bextract_OBJECTS =  bextract.o
bextract_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
bextract_LDFLAGS = 
mkcollection_OBJECTS =  mkcollection.o
mkcollection_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
mkcollection_LDFLAGS = 
phasevocoder_OBJECTS =  phasevocoder.o
phasevocoder_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
phasevocoder_LDFLAGS = 
pitchextract_OBJECTS =  pitchextract.o
pitchextract_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
pitchextract_LDFLAGS = 
sfplaygui_OBJECTS =  sfplaygui.o
sfplaygui_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
sfplaygui_LDFLAGS = 
tempo_OBJECTS =  tempo.o
tempo_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
tempo_LDFLAGS = 
server_OBJECTS =  server_main.o
server_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
server_LDFLAGS = 
textract_OBJECTS =  textract.o
textract_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
textract_LDFLAGS = 
msl_OBJECTS =  msl.o
msl_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
msl_LDFLAGS = 
tutorial_OBJECTS =  tutorial.o
tutorial_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
tutorial_LDFLAGS = 
ERBTest_OBJECTS =  ERBTest.o
ERBTest_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
ERBTest_LDFLAGS = 
marsyasTests_OBJECTS =  marsyasTests.o
marsyasTests_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
marsyasTests_LDFLAGS = 
SeneffEarTest_OBJECTS =  SeneffEarTest.o
SeneffEarTest_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
SeneffEarTest_LDFLAGS = 
record_OBJECTS =  record.o
record_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
record_LDFLAGS = 
drumExtract_OBJECTS =  drumExtract.o
drumExtract_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
drumExtract_LDFLAGS = 
mixer_OBJECTS =  mixer.o
mixer_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
mixer_LDFLAGS = 
mugle_OBJECTS =  mugle.o
mugle_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
mugle_LDFLAGS = 
classifyFile_OBJECTS =  classifyFile.o
classifyFile_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
classifyFile_LDFLAGS = 
midiTest_OBJECTS =  midiTest.o
midiTest_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
midiTest_LDFLAGS = 
LPCExample_OBJECTS =  LPCExample.o
LPCExample_DEPENDENCIES =  $(top_builddir)/marsyas/libmarsyas.a
LPCExample_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  ChangeLog Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/ERBTest.P .deps/LPCExample.P .deps/SeneffEarTest.P \
.deps/bextract.P .deps/classifyFile.P .deps/drumExtract.P \
.deps/extract.P .deps/marsyasTests.P .deps/midiTest.P .deps/mixer.P \
.deps/mkcollection.P .deps/msl.P .deps/mugle.P .deps/phasevocoder.P \
.deps/pitchextract.P .deps/record.P .deps/server_main.P .deps/sfinfo.P \
.deps/sfplay.P .deps/sfplaygui.P .deps/sfplugin.P .deps/tempo.P \
.deps/textract.P .deps/tutorial.P
SOURCES = $(sfinfo_SOURCES) $(sfplugin_SOURCES) $(sfplay_SOURCES) $(extract_SOURCES) $(bextract_SOURCES) $(mkcollection_SOURCES) $(phasevocoder_SOURCES) $(pitchextract_SOURCES) $(sfplaygui_SOURCES) $(tempo_SOURCES) $(server_SOURCES) $(textract_SOURCES) $(msl_SOURCES) $(tutorial_SOURCES) $(ERBTest_SOURCES) $(marsyasTests_SOURCES) $(SeneffEarTest_SOURCES) $(record_SOURCES) $(drumExtract_SOURCES) $(mixer_SOURCES) $(mugle_SOURCES) $(classifyFile_SOURCES) $(midiTest_SOURCES) $(LPCExample_SOURCES)
OBJECTS = $(sfinfo_OBJECTS) $(sfplugin_OBJECTS) $(sfplay_OBJECTS) $(extract_OBJECTS) $(bextract_OBJECTS) $(mkcollection_OBJECTS) $(phasevocoder_OBJECTS) $(pitchextract_OBJECTS) $(sfplaygui_OBJECTS) $(tempo_OBJECTS) $(server_OBJECTS) $(textract_OBJECTS) $(msl_OBJECTS) $(tutorial_OBJECTS) $(ERBTest_OBJECTS) $(marsyasTests_OBJECTS) $(SeneffEarTest_OBJECTS) $(record_OBJECTS) $(drumExtract_OBJECTS) $(mixer_OBJECTS) $(mugle_OBJECTS) $(classifyFile_OBJECTS) $(midiTest_OBJECTS) $(LPCExample_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

sfinfo: $(sfinfo_OBJECTS) $(sfinfo_DEPENDENCIES)
	@rm -f sfinfo
	$(CXXLINK) $(sfinfo_LDFLAGS) $(sfinfo_OBJECTS) $(sfinfo_LDADD) $(LIBS)

sfplugin: $(sfplugin_OBJECTS) $(sfplugin_DEPENDENCIES)
	@rm -f sfplugin
	$(CXXLINK) $(sfplugin_LDFLAGS) $(sfplugin_OBJECTS) $(sfplugin_LDADD) $(LIBS)

sfplay: $(sfplay_OBJECTS) $(sfplay_DEPENDENCIES)
	@rm -f sfplay
	$(CXXLINK) $(sfplay_LDFLAGS) $(sfplay_OBJECTS) $(sfplay_LDADD) $(LIBS)

extract: $(extract_OBJECTS) $(extract_DEPENDENCIES)
	@rm -f extract
	$(CXXLINK) $(extract_LDFLAGS) $(extract_OBJECTS) $(extract_LDADD) $(LIBS)

bextract: $(bextract_OBJECTS) $(bextract_DEPENDENCIES)
	@rm -f bextract
	$(CXXLINK) $(bextract_LDFLAGS) $(bextract_OBJECTS) $(bextract_LDADD) $(LIBS)

mkcollection: $(mkcollection_OBJECTS) $(mkcollection_DEPENDENCIES)
	@rm -f mkcollection
	$(CXXLINK) $(mkcollection_LDFLAGS) $(mkcollection_OBJECTS) $(mkcollection_LDADD) $(LIBS)

phasevocoder: $(phasevocoder_OBJECTS) $(phasevocoder_DEPENDENCIES)
	@rm -f phasevocoder
	$(CXXLINK) $(phasevocoder_LDFLAGS) $(phasevocoder_OBJECTS) $(phasevocoder_LDADD) $(LIBS)

pitchextract: $(pitchextract_OBJECTS) $(pitchextract_DEPENDENCIES)
	@rm -f pitchextract
	$(CXXLINK) $(pitchextract_LDFLAGS) $(pitchextract_OBJECTS) $(pitchextract_LDADD) $(LIBS)

sfplaygui: $(sfplaygui_OBJECTS) $(sfplaygui_DEPENDENCIES)
	@rm -f sfplaygui
	$(CXXLINK) $(sfplaygui_LDFLAGS) $(sfplaygui_OBJECTS) $(sfplaygui_LDADD) $(LIBS)

tempo: $(tempo_OBJECTS) $(tempo_DEPENDENCIES)
	@rm -f tempo
	$(CXXLINK) $(tempo_LDFLAGS) $(tempo_OBJECTS) $(tempo_LDADD) $(LIBS)

server: $(server_OBJECTS) $(server_DEPENDENCIES)
	@rm -f server
	$(CXXLINK) $(server_LDFLAGS) $(server_OBJECTS) $(server_LDADD) $(LIBS)

textract: $(textract_OBJECTS) $(textract_DEPENDENCIES)
	@rm -f textract
	$(CXXLINK) $(textract_LDFLAGS) $(textract_OBJECTS) $(textract_LDADD) $(LIBS)

msl: $(msl_OBJECTS) $(msl_DEPENDENCIES)
	@rm -f msl
	$(CXXLINK) $(msl_LDFLAGS) $(msl_OBJECTS) $(msl_LDADD) $(LIBS)

tutorial: $(tutorial_OBJECTS) $(tutorial_DEPENDENCIES)
	@rm -f tutorial
	$(CXXLINK) $(tutorial_LDFLAGS) $(tutorial_OBJECTS) $(tutorial_LDADD) $(LIBS)

ERBTest: $(ERBTest_OBJECTS) $(ERBTest_DEPENDENCIES)
	@rm -f ERBTest
	$(CXXLINK) $(ERBTest_LDFLAGS) $(ERBTest_OBJECTS) $(ERBTest_LDADD) $(LIBS)

marsyasTests: $(marsyasTests_OBJECTS) $(marsyasTests_DEPENDENCIES)
	@rm -f marsyasTests
	$(CXXLINK) $(marsyasTests_LDFLAGS) $(marsyasTests_OBJECTS) $(marsyasTests_LDADD) $(LIBS)

SeneffEarTest: $(SeneffEarTest_OBJECTS) $(SeneffEarTest_DEPENDENCIES)
	@rm -f SeneffEarTest
	$(CXXLINK) $(SeneffEarTest_LDFLAGS) $(SeneffEarTest_OBJECTS) $(SeneffEarTest_LDADD) $(LIBS)

record: $(record_OBJECTS) $(record_DEPENDENCIES)
	@rm -f record
	$(CXXLINK) $(record_LDFLAGS) $(record_OBJECTS) $(record_LDADD) $(LIBS)

drumExtract: $(drumExtract_OBJECTS) $(drumExtract_DEPENDENCIES)
	@rm -f drumExtract
	$(CXXLINK) $(drumExtract_LDFLAGS) $(drumExtract_OBJECTS) $(drumExtract_LDADD) $(LIBS)

mixer: $(mixer_OBJECTS) $(mixer_DEPENDENCIES)
	@rm -f mixer
	$(CXXLINK) $(mixer_LDFLAGS) $(mixer_OBJECTS) $(mixer_LDADD) $(LIBS)

mugle: $(mugle_OBJECTS) $(mugle_DEPENDENCIES)
	@rm -f mugle
	$(CXXLINK) $(mugle_LDFLAGS) $(mugle_OBJECTS) $(mugle_LDADD) $(LIBS)

classifyFile: $(classifyFile_OBJECTS) $(classifyFile_DEPENDENCIES)
	@rm -f classifyFile
	$(CXXLINK) $(classifyFile_LDFLAGS) $(classifyFile_OBJECTS) $(classifyFile_LDADD) $(LIBS)

midiTest: $(midiTest_OBJECTS) $(midiTest_DEPENDENCIES)
	@rm -f midiTest
	$(CXXLINK) $(midiTest_LDFLAGS) $(midiTest_OBJECTS) $(midiTest_LDADD) $(LIBS)

LPCExample: $(LPCExample_OBJECTS) $(LPCExample_DEPENDENCIES)
	@rm -f LPCExample
	$(CXXLINK) $(LPCExample_LDFLAGS) $(LPCExample_OBJECTS) $(LPCExample_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu src/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-compile clean-tags clean-depend \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-depend distclean-generic clean-am

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
