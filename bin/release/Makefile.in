# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = sfplay$(EXEEXT) phasevocoder$(EXEEXT) sfplugin$(EXEEXT) \
	bextract$(EXEEXT) mkcollection$(EXEEXT) mudbox$(EXEEXT) \
	record$(EXEEXT) classifyFile$(EXEEXT) peakSynth$(EXEEXT) \
	peakClustering$(EXEEXT) sfinfo$(EXEEXT) extract$(EXEEXT) \
	midiTest$(EXEEXT) boomchick$(EXEEXT) pitchextract$(EXEEXT) \
	orcarecord$(EXEEXT) virtualsensor$(EXEEXT) kea$(EXEEXT) \
	scheduler$(EXEEXT) msl$(EXEEXT) regressionChecks$(EXEEXT)
subdir = bin/release
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_bextract_OBJECTS = bextract.$(OBJEXT)
bextract_OBJECTS = $(am_bextract_OBJECTS)
am__DEPENDENCIES_1 =
bextract_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_boomchick_OBJECTS = boomchick.$(OBJEXT)
boomchick_OBJECTS = $(am_boomchick_OBJECTS)
boomchick_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_classifyFile_OBJECTS = classifyFile.$(OBJEXT)
classifyFile_OBJECTS = $(am_classifyFile_OBJECTS)
classifyFile_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_extract_OBJECTS = extract.$(OBJEXT)
extract_OBJECTS = $(am_extract_OBJECTS)
extract_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_kea_OBJECTS = kea.$(OBJEXT)
kea_OBJECTS = $(am_kea_OBJECTS)
kea_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_midiTest_OBJECTS = midiTest.$(OBJEXT)
midiTest_OBJECTS = $(am_midiTest_OBJECTS)
midiTest_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_mkcollection_OBJECTS = mkcollection.$(OBJEXT)
mkcollection_OBJECTS = $(am_mkcollection_OBJECTS)
mkcollection_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_msl_OBJECTS = msl.$(OBJEXT)
msl_OBJECTS = $(am_msl_OBJECTS)
msl_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_mudbox_OBJECTS = mudbox.$(OBJEXT)
mudbox_OBJECTS = $(am_mudbox_OBJECTS)
mudbox_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_orcarecord_OBJECTS = orcarecord.$(OBJEXT)
orcarecord_OBJECTS = $(am_orcarecord_OBJECTS)
orcarecord_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_peakClustering_OBJECTS = peakClustering.$(OBJEXT)
peakClustering_OBJECTS = $(am_peakClustering_OBJECTS)
peakClustering_DEPENDENCIES =  \
	$(top_builddir)/lib/release/libmarsyas.a $(am__DEPENDENCIES_1)
am_peakSynth_OBJECTS = peakSynth.$(OBJEXT)
peakSynth_OBJECTS = $(am_peakSynth_OBJECTS)
peakSynth_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_phasevocoder_OBJECTS = phasevocoder.$(OBJEXT)
phasevocoder_OBJECTS = $(am_phasevocoder_OBJECTS)
phasevocoder_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_pitchextract_OBJECTS = pitchextract.$(OBJEXT)
pitchextract_OBJECTS = $(am_pitchextract_OBJECTS)
pitchextract_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_record_OBJECTS = record.$(OBJEXT)
record_OBJECTS = $(am_record_OBJECTS)
record_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_regressionChecks_OBJECTS = regressionChecks.$(OBJEXT)
regressionChecks_OBJECTS = $(am_regressionChecks_OBJECTS)
regressionChecks_DEPENDENCIES =  \
	$(top_builddir)/lib/release/libmarsyas.a $(am__DEPENDENCIES_1)
am_scheduler_OBJECTS = scheduler.$(OBJEXT)
scheduler_OBJECTS = $(am_scheduler_OBJECTS)
scheduler_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_sfinfo_OBJECTS = sfinfo.$(OBJEXT)
sfinfo_OBJECTS = $(am_sfinfo_OBJECTS)
sfinfo_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_sfplay_OBJECTS = sfplay.$(OBJEXT)
sfplay_OBJECTS = $(am_sfplay_OBJECTS)
sfplay_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_sfplugin_OBJECTS = sfplugin.$(OBJEXT)
sfplugin_OBJECTS = $(am_sfplugin_OBJECTS)
sfplugin_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
am_virtualsensor_OBJECTS = virtualsensor.$(OBJEXT)
virtualsensor_OBJECTS = $(am_virtualsensor_OBJECTS)
virtualsensor_DEPENDENCIES = $(top_builddir)/lib/release/libmarsyas.a \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(bextract_SOURCES) $(boomchick_SOURCES) \
	$(classifyFile_SOURCES) $(extract_SOURCES) $(kea_SOURCES) \
	$(midiTest_SOURCES) $(mkcollection_SOURCES) $(msl_SOURCES) \
	$(mudbox_SOURCES) $(orcarecord_SOURCES) \
	$(peakClustering_SOURCES) $(peakSynth_SOURCES) \
	$(phasevocoder_SOURCES) $(pitchextract_SOURCES) \
	$(record_SOURCES) $(regressionChecks_SOURCES) \
	$(scheduler_SOURCES) $(sfinfo_SOURCES) $(sfplay_SOURCES) \
	$(sfplugin_SOURCES) $(virtualsensor_SOURCES)
DIST_SOURCES = $(bextract_SOURCES) $(boomchick_SOURCES) \
	$(classifyFile_SOURCES) $(extract_SOURCES) $(kea_SOURCES) \
	$(midiTest_SOURCES) $(mkcollection_SOURCES) $(msl_SOURCES) \
	$(mudbox_SOURCES) $(orcarecord_SOURCES) \
	$(peakClustering_SOURCES) $(peakSynth_SOURCES) \
	$(phasevocoder_SOURCES) $(pitchextract_SOURCES) \
	$(record_SOURCES) $(regressionChecks_SOURCES) \
	$(scheduler_SOURCES) $(sfinfo_SOURCES) $(sfplay_SOURCES) \
	$(sfplugin_SOURCES) $(virtualsensor_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
Audio = @Audio@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTRIBUTED = @DISTRIBUTED@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INCLUDES = @INCLUDES@ -I$(top_srcdir)/src/marsyas \
	-I$(top_srcdir)/otherlibs/RtAudio \
	-I$(top_srcdir)/otherlibs/RtMidi \
	-I$(top_srcdir)/otherlibs/libsvm \
	-I$(top_srcdir)/src/marsyas/MATLAB
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
Libs = @Libs@
MADLIB = @MADLIB@
MAKEINFO = @MAKEINFO@
MATLABLIBS = @MATLABLIBS@
MKDIR_P = @MKDIR_P@
MslLibs = @MslLibs@
OBJEXT = @OBJEXT@
OGGLIB = @OGGLIB@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qmake = @qmake@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
MAINTAINERCLEANFILES = Makefile.in
sfplay_SOURCES = $(top_srcdir)/src/apps/sfplay/sfplay.cpp
sfplay_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

phasevocoder_SOURCES = $(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp
phasevocoder_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

sfplugin_SOURCES = $(top_srcdir)/src/apps/sfplugin/sfplugin.cpp
sfplugin_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

bextract_SOURCES = $(top_srcdir)/src/apps/bextract/bextract.cpp
bextract_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

mkcollection_SOURCES = $(top_srcdir)/src/apps/mkcollection/mkcollection.cpp
mkcollection_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

mudbox_SOURCES = $(top_srcdir)/src/apps/mudbox/mudbox.cpp
mudbox_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

regressionChecks_SOURCES = \
	$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp

#	$(top_srcdir)/src/apps/regressionChecks/coreChecks.cpp \
#	$(top_srcdir)/src/apps/regressionChecks/basicChecks.cpp \
#	$(top_srcdir)/src/apps/regressionChecks/analysisChecks.cpp
#pkginclude_HEADERS = \
#	$(top_srcdir)/src/apps/regressionChecks/common-reg.h
regressionChecks_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

record_SOURCES = $(top_srcdir)/src/apps/record/record.cpp
record_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

sfinfo_SOURCES = $(top_srcdir)/src/apps/sfinfo/sfinfo.cpp
sfinfo_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

peakSynth_SOURCES = $(top_srcdir)/src/apps/peakSynth/peakSynth.cpp
peakSynth_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

peakClustering_SOURCES = $(top_srcdir)/src/apps/peakClustering/peakClustering.cpp
peakClustering_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

classifyFile_SOURCES = $(top_srcdir)/src/apps/classifyFile/classifyFile.cpp
classifyFile_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

boomchick_SOURCES = $(top_srcdir)/src/apps/boomchick/boomchick.cpp
boomchick_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

pitchextract_SOURCES = $(top_srcdir)/src/apps/pitchextract/pitchextract.cpp
pitchextract_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

extract_SOURCES = $(top_srcdir)/src/apps/extract/extract.cpp
extract_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

midiTest_SOURCES = $(top_srcdir)/src/apps/midiTest/midiTest.cpp
midiTest_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

orcarecord_SOURCES = $(top_srcdir)/src/apps/orcarecord/orcarecord.cpp
orcarecord_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
	       $(Libs)

virtualsensor_SOURCES = $(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp
virtualsensor_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
		    $(Libs)


#helloworld_SOURCES = $(top_srcdir)/examples/helloworld.cpp
#helloworld_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
#		$(Libs)
scheduler_SOURCES = $(top_srcdir)/src/apps/scheduler/scheduler.cpp
scheduler_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
		$(Libs)

msl_SOURCES = $(top_srcdir)/src/apps/msl/msl.cpp
msl_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
		$(Libs) $(MslLibs)

kea_SOURCES = $(top_srcdir)/src/apps/kea/kea.cpp
kea_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
		$(Libs) 

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  bin/release/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  bin/release/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
bextract$(EXEEXT): $(bextract_OBJECTS) $(bextract_DEPENDENCIES) 
	@rm -f bextract$(EXEEXT)
	$(CXXLINK) $(bextract_OBJECTS) $(bextract_LDADD) $(LIBS)
boomchick$(EXEEXT): $(boomchick_OBJECTS) $(boomchick_DEPENDENCIES) 
	@rm -f boomchick$(EXEEXT)
	$(CXXLINK) $(boomchick_OBJECTS) $(boomchick_LDADD) $(LIBS)
classifyFile$(EXEEXT): $(classifyFile_OBJECTS) $(classifyFile_DEPENDENCIES) 
	@rm -f classifyFile$(EXEEXT)
	$(CXXLINK) $(classifyFile_OBJECTS) $(classifyFile_LDADD) $(LIBS)
extract$(EXEEXT): $(extract_OBJECTS) $(extract_DEPENDENCIES) 
	@rm -f extract$(EXEEXT)
	$(CXXLINK) $(extract_OBJECTS) $(extract_LDADD) $(LIBS)
kea$(EXEEXT): $(kea_OBJECTS) $(kea_DEPENDENCIES) 
	@rm -f kea$(EXEEXT)
	$(CXXLINK) $(kea_OBJECTS) $(kea_LDADD) $(LIBS)
midiTest$(EXEEXT): $(midiTest_OBJECTS) $(midiTest_DEPENDENCIES) 
	@rm -f midiTest$(EXEEXT)
	$(CXXLINK) $(midiTest_OBJECTS) $(midiTest_LDADD) $(LIBS)
mkcollection$(EXEEXT): $(mkcollection_OBJECTS) $(mkcollection_DEPENDENCIES) 
	@rm -f mkcollection$(EXEEXT)
	$(CXXLINK) $(mkcollection_OBJECTS) $(mkcollection_LDADD) $(LIBS)
msl$(EXEEXT): $(msl_OBJECTS) $(msl_DEPENDENCIES) 
	@rm -f msl$(EXEEXT)
	$(CXXLINK) $(msl_OBJECTS) $(msl_LDADD) $(LIBS)
mudbox$(EXEEXT): $(mudbox_OBJECTS) $(mudbox_DEPENDENCIES) 
	@rm -f mudbox$(EXEEXT)
	$(CXXLINK) $(mudbox_OBJECTS) $(mudbox_LDADD) $(LIBS)
orcarecord$(EXEEXT): $(orcarecord_OBJECTS) $(orcarecord_DEPENDENCIES) 
	@rm -f orcarecord$(EXEEXT)
	$(CXXLINK) $(orcarecord_OBJECTS) $(orcarecord_LDADD) $(LIBS)
peakClustering$(EXEEXT): $(peakClustering_OBJECTS) $(peakClustering_DEPENDENCIES) 
	@rm -f peakClustering$(EXEEXT)
	$(CXXLINK) $(peakClustering_OBJECTS) $(peakClustering_LDADD) $(LIBS)
peakSynth$(EXEEXT): $(peakSynth_OBJECTS) $(peakSynth_DEPENDENCIES) 
	@rm -f peakSynth$(EXEEXT)
	$(CXXLINK) $(peakSynth_OBJECTS) $(peakSynth_LDADD) $(LIBS)
phasevocoder$(EXEEXT): $(phasevocoder_OBJECTS) $(phasevocoder_DEPENDENCIES) 
	@rm -f phasevocoder$(EXEEXT)
	$(CXXLINK) $(phasevocoder_OBJECTS) $(phasevocoder_LDADD) $(LIBS)
pitchextract$(EXEEXT): $(pitchextract_OBJECTS) $(pitchextract_DEPENDENCIES) 
	@rm -f pitchextract$(EXEEXT)
	$(CXXLINK) $(pitchextract_OBJECTS) $(pitchextract_LDADD) $(LIBS)
record$(EXEEXT): $(record_OBJECTS) $(record_DEPENDENCIES) 
	@rm -f record$(EXEEXT)
	$(CXXLINK) $(record_OBJECTS) $(record_LDADD) $(LIBS)
regressionChecks$(EXEEXT): $(regressionChecks_OBJECTS) $(regressionChecks_DEPENDENCIES) 
	@rm -f regressionChecks$(EXEEXT)
	$(CXXLINK) $(regressionChecks_OBJECTS) $(regressionChecks_LDADD) $(LIBS)
scheduler$(EXEEXT): $(scheduler_OBJECTS) $(scheduler_DEPENDENCIES) 
	@rm -f scheduler$(EXEEXT)
	$(CXXLINK) $(scheduler_OBJECTS) $(scheduler_LDADD) $(LIBS)
sfinfo$(EXEEXT): $(sfinfo_OBJECTS) $(sfinfo_DEPENDENCIES) 
	@rm -f sfinfo$(EXEEXT)
	$(CXXLINK) $(sfinfo_OBJECTS) $(sfinfo_LDADD) $(LIBS)
sfplay$(EXEEXT): $(sfplay_OBJECTS) $(sfplay_DEPENDENCIES) 
	@rm -f sfplay$(EXEEXT)
	$(CXXLINK) $(sfplay_OBJECTS) $(sfplay_LDADD) $(LIBS)
sfplugin$(EXEEXT): $(sfplugin_OBJECTS) $(sfplugin_DEPENDENCIES) 
	@rm -f sfplugin$(EXEEXT)
	$(CXXLINK) $(sfplugin_OBJECTS) $(sfplugin_LDADD) $(LIBS)
virtualsensor$(EXEEXT): $(virtualsensor_OBJECTS) $(virtualsensor_DEPENDENCIES) 
	@rm -f virtualsensor$(EXEEXT)
	$(CXXLINK) $(virtualsensor_OBJECTS) $(virtualsensor_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bextract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boomchick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifyFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kea.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/midiTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mkcollection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/msl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mudbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/orcarecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peakClustering.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peakSynth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasevocoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pitchextract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/record.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regressionChecks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scheduler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfplugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/virtualsensor.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

bextract.o: $(top_srcdir)/src/apps/bextract/bextract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bextract.o -MD -MP -MF $(DEPDIR)/bextract.Tpo -c -o bextract.o `test -f '$(top_srcdir)/src/apps/bextract/bextract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/bextract/bextract.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bextract.Tpo $(DEPDIR)/bextract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/bextract/bextract.cpp' object='bextract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bextract.o `test -f '$(top_srcdir)/src/apps/bextract/bextract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/bextract/bextract.cpp

bextract.obj: $(top_srcdir)/src/apps/bextract/bextract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bextract.obj -MD -MP -MF $(DEPDIR)/bextract.Tpo -c -o bextract.obj `if test -f '$(top_srcdir)/src/apps/bextract/bextract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/bextract/bextract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/bextract/bextract.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bextract.Tpo $(DEPDIR)/bextract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/bextract/bextract.cpp' object='bextract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bextract.obj `if test -f '$(top_srcdir)/src/apps/bextract/bextract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/bextract/bextract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/bextract/bextract.cpp'; fi`

boomchick.o: $(top_srcdir)/src/apps/boomchick/boomchick.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boomchick.o -MD -MP -MF $(DEPDIR)/boomchick.Tpo -c -o boomchick.o `test -f '$(top_srcdir)/src/apps/boomchick/boomchick.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/boomchick/boomchick.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/boomchick.Tpo $(DEPDIR)/boomchick.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/boomchick/boomchick.cpp' object='boomchick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boomchick.o `test -f '$(top_srcdir)/src/apps/boomchick/boomchick.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/boomchick/boomchick.cpp

boomchick.obj: $(top_srcdir)/src/apps/boomchick/boomchick.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boomchick.obj -MD -MP -MF $(DEPDIR)/boomchick.Tpo -c -o boomchick.obj `if test -f '$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/boomchick.Tpo $(DEPDIR)/boomchick.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/boomchick/boomchick.cpp' object='boomchick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boomchick.obj `if test -f '$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/boomchick/boomchick.cpp'; fi`

classifyFile.o: $(top_srcdir)/src/apps/classifyFile/classifyFile.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT classifyFile.o -MD -MP -MF $(DEPDIR)/classifyFile.Tpo -c -o classifyFile.o `test -f '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/classifyFile.Tpo $(DEPDIR)/classifyFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp' object='classifyFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o classifyFile.o `test -f '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp

classifyFile.obj: $(top_srcdir)/src/apps/classifyFile/classifyFile.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT classifyFile.obj -MD -MP -MF $(DEPDIR)/classifyFile.Tpo -c -o classifyFile.obj `if test -f '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/classifyFile.Tpo $(DEPDIR)/classifyFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp' object='classifyFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o classifyFile.obj `if test -f '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/classifyFile/classifyFile.cpp'; fi`

extract.o: $(top_srcdir)/src/apps/extract/extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT extract.o -MD -MP -MF $(DEPDIR)/extract.Tpo -c -o extract.o `test -f '$(top_srcdir)/src/apps/extract/extract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/extract/extract.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/extract.Tpo $(DEPDIR)/extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/extract/extract.cpp' object='extract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o extract.o `test -f '$(top_srcdir)/src/apps/extract/extract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/extract/extract.cpp

extract.obj: $(top_srcdir)/src/apps/extract/extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT extract.obj -MD -MP -MF $(DEPDIR)/extract.Tpo -c -o extract.obj `if test -f '$(top_srcdir)/src/apps/extract/extract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/extract/extract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/extract/extract.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/extract.Tpo $(DEPDIR)/extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/extract/extract.cpp' object='extract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o extract.obj `if test -f '$(top_srcdir)/src/apps/extract/extract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/extract/extract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/extract/extract.cpp'; fi`

kea.o: $(top_srcdir)/src/apps/kea/kea.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kea.o -MD -MP -MF $(DEPDIR)/kea.Tpo -c -o kea.o `test -f '$(top_srcdir)/src/apps/kea/kea.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/kea/kea.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/kea.Tpo $(DEPDIR)/kea.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/kea/kea.cpp' object='kea.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kea.o `test -f '$(top_srcdir)/src/apps/kea/kea.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/kea/kea.cpp

kea.obj: $(top_srcdir)/src/apps/kea/kea.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kea.obj -MD -MP -MF $(DEPDIR)/kea.Tpo -c -o kea.obj `if test -f '$(top_srcdir)/src/apps/kea/kea.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/kea/kea.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/kea/kea.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/kea.Tpo $(DEPDIR)/kea.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/kea/kea.cpp' object='kea.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kea.obj `if test -f '$(top_srcdir)/src/apps/kea/kea.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/kea/kea.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/kea/kea.cpp'; fi`

midiTest.o: $(top_srcdir)/src/apps/midiTest/midiTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT midiTest.o -MD -MP -MF $(DEPDIR)/midiTest.Tpo -c -o midiTest.o `test -f '$(top_srcdir)/src/apps/midiTest/midiTest.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/midiTest/midiTest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/midiTest.Tpo $(DEPDIR)/midiTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/midiTest/midiTest.cpp' object='midiTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o midiTest.o `test -f '$(top_srcdir)/src/apps/midiTest/midiTest.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/midiTest/midiTest.cpp

midiTest.obj: $(top_srcdir)/src/apps/midiTest/midiTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT midiTest.obj -MD -MP -MF $(DEPDIR)/midiTest.Tpo -c -o midiTest.obj `if test -f '$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/midiTest.Tpo $(DEPDIR)/midiTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/midiTest/midiTest.cpp' object='midiTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o midiTest.obj `if test -f '$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/midiTest/midiTest.cpp'; fi`

mkcollection.o: $(top_srcdir)/src/apps/mkcollection/mkcollection.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mkcollection.o -MD -MP -MF $(DEPDIR)/mkcollection.Tpo -c -o mkcollection.o `test -f '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mkcollection.Tpo $(DEPDIR)/mkcollection.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp' object='mkcollection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mkcollection.o `test -f '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp

mkcollection.obj: $(top_srcdir)/src/apps/mkcollection/mkcollection.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mkcollection.obj -MD -MP -MF $(DEPDIR)/mkcollection.Tpo -c -o mkcollection.obj `if test -f '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mkcollection.Tpo $(DEPDIR)/mkcollection.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp' object='mkcollection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mkcollection.obj `if test -f '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/mkcollection/mkcollection.cpp'; fi`

msl.o: $(top_srcdir)/src/apps/msl/msl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT msl.o -MD -MP -MF $(DEPDIR)/msl.Tpo -c -o msl.o `test -f '$(top_srcdir)/src/apps/msl/msl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/msl/msl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/msl.Tpo $(DEPDIR)/msl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/msl/msl.cpp' object='msl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o msl.o `test -f '$(top_srcdir)/src/apps/msl/msl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/msl/msl.cpp

msl.obj: $(top_srcdir)/src/apps/msl/msl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT msl.obj -MD -MP -MF $(DEPDIR)/msl.Tpo -c -o msl.obj `if test -f '$(top_srcdir)/src/apps/msl/msl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/msl/msl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/msl/msl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/msl.Tpo $(DEPDIR)/msl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/msl/msl.cpp' object='msl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o msl.obj `if test -f '$(top_srcdir)/src/apps/msl/msl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/msl/msl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/msl/msl.cpp'; fi`

mudbox.o: $(top_srcdir)/src/apps/mudbox/mudbox.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mudbox.o -MD -MP -MF $(DEPDIR)/mudbox.Tpo -c -o mudbox.o `test -f '$(top_srcdir)/src/apps/mudbox/mudbox.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/mudbox/mudbox.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mudbox.Tpo $(DEPDIR)/mudbox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/mudbox/mudbox.cpp' object='mudbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mudbox.o `test -f '$(top_srcdir)/src/apps/mudbox/mudbox.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/mudbox/mudbox.cpp

mudbox.obj: $(top_srcdir)/src/apps/mudbox/mudbox.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mudbox.obj -MD -MP -MF $(DEPDIR)/mudbox.Tpo -c -o mudbox.obj `if test -f '$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mudbox.Tpo $(DEPDIR)/mudbox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/mudbox/mudbox.cpp' object='mudbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mudbox.obj `if test -f '$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/mudbox/mudbox.cpp'; fi`

orcarecord.o: $(top_srcdir)/src/apps/orcarecord/orcarecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT orcarecord.o -MD -MP -MF $(DEPDIR)/orcarecord.Tpo -c -o orcarecord.o `test -f '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/orcarecord.Tpo $(DEPDIR)/orcarecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp' object='orcarecord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o orcarecord.o `test -f '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp

orcarecord.obj: $(top_srcdir)/src/apps/orcarecord/orcarecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT orcarecord.obj -MD -MP -MF $(DEPDIR)/orcarecord.Tpo -c -o orcarecord.obj `if test -f '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/orcarecord.Tpo $(DEPDIR)/orcarecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp' object='orcarecord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o orcarecord.obj `if test -f '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/orcarecord/orcarecord.cpp'; fi`

peakClustering.o: $(top_srcdir)/src/apps/peakClustering/peakClustering.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT peakClustering.o -MD -MP -MF $(DEPDIR)/peakClustering.Tpo -c -o peakClustering.o `test -f '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/peakClustering.Tpo $(DEPDIR)/peakClustering.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp' object='peakClustering.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o peakClustering.o `test -f '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp

peakClustering.obj: $(top_srcdir)/src/apps/peakClustering/peakClustering.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT peakClustering.obj -MD -MP -MF $(DEPDIR)/peakClustering.Tpo -c -o peakClustering.obj `if test -f '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/peakClustering.Tpo $(DEPDIR)/peakClustering.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp' object='peakClustering.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o peakClustering.obj `if test -f '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/peakClustering/peakClustering.cpp'; fi`

peakSynth.o: $(top_srcdir)/src/apps/peakSynth/peakSynth.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT peakSynth.o -MD -MP -MF $(DEPDIR)/peakSynth.Tpo -c -o peakSynth.o `test -f '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/peakSynth.Tpo $(DEPDIR)/peakSynth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp' object='peakSynth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o peakSynth.o `test -f '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp

peakSynth.obj: $(top_srcdir)/src/apps/peakSynth/peakSynth.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT peakSynth.obj -MD -MP -MF $(DEPDIR)/peakSynth.Tpo -c -o peakSynth.obj `if test -f '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/peakSynth.Tpo $(DEPDIR)/peakSynth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp' object='peakSynth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o peakSynth.obj `if test -f '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/peakSynth/peakSynth.cpp'; fi`

phasevocoder.o: $(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasevocoder.o -MD -MP -MF $(DEPDIR)/phasevocoder.Tpo -c -o phasevocoder.o `test -f '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/phasevocoder.Tpo $(DEPDIR)/phasevocoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp' object='phasevocoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasevocoder.o `test -f '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp

phasevocoder.obj: $(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasevocoder.obj -MD -MP -MF $(DEPDIR)/phasevocoder.Tpo -c -o phasevocoder.obj `if test -f '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/phasevocoder.Tpo $(DEPDIR)/phasevocoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp' object='phasevocoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasevocoder.obj `if test -f '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/phasevocoder/phasevocoder.cpp'; fi`

pitchextract.o: $(top_srcdir)/src/apps/pitchextract/pitchextract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pitchextract.o -MD -MP -MF $(DEPDIR)/pitchextract.Tpo -c -o pitchextract.o `test -f '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pitchextract.Tpo $(DEPDIR)/pitchextract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp' object='pitchextract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pitchextract.o `test -f '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp

pitchextract.obj: $(top_srcdir)/src/apps/pitchextract/pitchextract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pitchextract.obj -MD -MP -MF $(DEPDIR)/pitchextract.Tpo -c -o pitchextract.obj `if test -f '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pitchextract.Tpo $(DEPDIR)/pitchextract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp' object='pitchextract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pitchextract.obj `if test -f '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/pitchextract/pitchextract.cpp'; fi`

record.o: $(top_srcdir)/src/apps/record/record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT record.o -MD -MP -MF $(DEPDIR)/record.Tpo -c -o record.o `test -f '$(top_srcdir)/src/apps/record/record.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/record/record.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/record.Tpo $(DEPDIR)/record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/record/record.cpp' object='record.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o record.o `test -f '$(top_srcdir)/src/apps/record/record.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/record/record.cpp

record.obj: $(top_srcdir)/src/apps/record/record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT record.obj -MD -MP -MF $(DEPDIR)/record.Tpo -c -o record.obj `if test -f '$(top_srcdir)/src/apps/record/record.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/record/record.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/record/record.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/record.Tpo $(DEPDIR)/record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/record/record.cpp' object='record.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o record.obj `if test -f '$(top_srcdir)/src/apps/record/record.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/record/record.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/record/record.cpp'; fi`

regressionChecks.o: $(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT regressionChecks.o -MD -MP -MF $(DEPDIR)/regressionChecks.Tpo -c -o regressionChecks.o `test -f '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/regressionChecks.Tpo $(DEPDIR)/regressionChecks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp' object='regressionChecks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o regressionChecks.o `test -f '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp

regressionChecks.obj: $(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT regressionChecks.obj -MD -MP -MF $(DEPDIR)/regressionChecks.Tpo -c -o regressionChecks.obj `if test -f '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/regressionChecks.Tpo $(DEPDIR)/regressionChecks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp' object='regressionChecks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o regressionChecks.obj `if test -f '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/regressionChecks/regressionChecks.cpp'; fi`

scheduler.o: $(top_srcdir)/src/apps/scheduler/scheduler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scheduler.o -MD -MP -MF $(DEPDIR)/scheduler.Tpo -c -o scheduler.o `test -f '$(top_srcdir)/src/apps/scheduler/scheduler.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/scheduler/scheduler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/scheduler.Tpo $(DEPDIR)/scheduler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/scheduler/scheduler.cpp' object='scheduler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scheduler.o `test -f '$(top_srcdir)/src/apps/scheduler/scheduler.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/scheduler/scheduler.cpp

scheduler.obj: $(top_srcdir)/src/apps/scheduler/scheduler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scheduler.obj -MD -MP -MF $(DEPDIR)/scheduler.Tpo -c -o scheduler.obj `if test -f '$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/scheduler.Tpo $(DEPDIR)/scheduler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/scheduler/scheduler.cpp' object='scheduler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scheduler.obj `if test -f '$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/scheduler/scheduler.cpp'; fi`

sfinfo.o: $(top_srcdir)/src/apps/sfinfo/sfinfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfinfo.o -MD -MP -MF $(DEPDIR)/sfinfo.Tpo -c -o sfinfo.o `test -f '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfinfo.Tpo $(DEPDIR)/sfinfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp' object='sfinfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfinfo.o `test -f '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp

sfinfo.obj: $(top_srcdir)/src/apps/sfinfo/sfinfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfinfo.obj -MD -MP -MF $(DEPDIR)/sfinfo.Tpo -c -o sfinfo.obj `if test -f '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfinfo.Tpo $(DEPDIR)/sfinfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp' object='sfinfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfinfo.obj `if test -f '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfinfo/sfinfo.cpp'; fi`

sfplay.o: $(top_srcdir)/src/apps/sfplay/sfplay.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfplay.o -MD -MP -MF $(DEPDIR)/sfplay.Tpo -c -o sfplay.o `test -f '$(top_srcdir)/src/apps/sfplay/sfplay.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfplay/sfplay.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfplay.Tpo $(DEPDIR)/sfplay.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfplay/sfplay.cpp' object='sfplay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfplay.o `test -f '$(top_srcdir)/src/apps/sfplay/sfplay.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfplay/sfplay.cpp

sfplay.obj: $(top_srcdir)/src/apps/sfplay/sfplay.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfplay.obj -MD -MP -MF $(DEPDIR)/sfplay.Tpo -c -o sfplay.obj `if test -f '$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfplay.Tpo $(DEPDIR)/sfplay.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfplay/sfplay.cpp' object='sfplay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfplay.obj `if test -f '$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfplay/sfplay.cpp'; fi`

sfplugin.o: $(top_srcdir)/src/apps/sfplugin/sfplugin.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfplugin.o -MD -MP -MF $(DEPDIR)/sfplugin.Tpo -c -o sfplugin.o `test -f '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfplugin.Tpo $(DEPDIR)/sfplugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp' object='sfplugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfplugin.o `test -f '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp

sfplugin.obj: $(top_srcdir)/src/apps/sfplugin/sfplugin.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sfplugin.obj -MD -MP -MF $(DEPDIR)/sfplugin.Tpo -c -o sfplugin.obj `if test -f '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfplugin.Tpo $(DEPDIR)/sfplugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp' object='sfplugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sfplugin.obj `if test -f '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/sfplugin/sfplugin.cpp'; fi`

virtualsensor.o: $(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT virtualsensor.o -MD -MP -MF $(DEPDIR)/virtualsensor.Tpo -c -o virtualsensor.o `test -f '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/virtualsensor.Tpo $(DEPDIR)/virtualsensor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp' object='virtualsensor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o virtualsensor.o `test -f '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp

virtualsensor.obj: $(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT virtualsensor.obj -MD -MP -MF $(DEPDIR)/virtualsensor.Tpo -c -o virtualsensor.obj `if test -f '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/virtualsensor.Tpo $(DEPDIR)/virtualsensor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp' object='virtualsensor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o virtualsensor.obj `if test -f '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/apps/virtualsensor/virtualsensor.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


#gettingdata_SOURCES = $(top_srcdir)/examples/gettingdata.cpp
#gettingdata_LDADD = $(top_builddir)/lib/release/libmarsyas.a \
#		    $(Libs)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
