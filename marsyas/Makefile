# Makefile.in generated by automake 1.7.9 from Makefile.am.
# marsyas/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/marsyas
pkglibdir = $(libdir)/marsyas
pkgincludedir = $(includedir)/marsyas
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run tar
AUTOCONF = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run automake-1.7
AWK = gawk
Audio = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTRIBUTED = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
Includes = 
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
Libs = -lpthread -lasound 
MADLIB = 
MAKEINFO = ${SHELL} /home/gtzan/scratch/marsyas-0.2.6/config/missing --run makeinfo
MRSSWIG = 
MslLibs = 
OBJEXT = o
PACKAGE = marsyas
PACKAGE_BUGREPORT = gtzan@cs.uvic.ca
PACKAGE_NAME = marsyas
PACKAGE_STRING = marsyas 0.2.6
PACKAGE_TARNAME = marsyas
PACKAGE_VERSION = 0.2.6
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.2.6
ac_aux_dir = config
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/gtzan/scratch/marsyas-0.2.6/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs = 
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc

SUBDIRS = system

MAINTAINERCLEANFILES = Makefile.in

DISTCLEANFILES = stamp-h.in

EXTRA_DIST = config.h.in win_config.h Doxyfile

INCLUDES = -I$(top_builddir) -I$(top_srcdir) -I$(Includes) 

pkginclude_HEADERS = MrsLog.h \
VScheduler.h Scheduler.h ScheduledEvent.h \
TmTimer.h TmTime.h TmSampleCount.h TmGetTime.h \
MarEvent.h EvGetUpd.h EvValUpd.h EvExpUpd.h Expression.h Repeat.h Heap.h \
realvec.h common.h \
SoundFileSource.h AuFileSource.h \
WavFileSource.h BaseAudioSink.h \
AudioSource.h AudioSink.h SoundFileSink.h \
AuFileSink.h WavFileSink.h FileName.h MarSystem.h \
MarControls.h MarControlValue.h \
Gain.h Spectrum.h InvSpectrum.h \
Collection.h fft.h Rms.h PlotSink.h \
AutoCorrelation.h Peaker.h Peaker1.h HalfWaveRectifier.h \
TimeStretch.h Conversions.h MaxArgMax.h MinArgMin.h \
Composite.h Series.h \
ShiftInput.h ShiftOutput.h PvFold.h PvConvert.h \
PvConvolve.h PvOscBank.h PvUnconvert.h PvOverlapadd.h Hamming.h \
Fanout.h Fanin.h Negative.h SineSource.h MarSystemManager.h \
PowerSpectrum.h Centroid.h Rolloff.h \
Flux.h Memory.h Mean.h StandardDeviation.h ZeroCrossings.h \
Socket.h Thread.h Messager.h GaussianClassifier.h AbsSoundFileSink.h AbsSoundFileSource.h \
Confidence.h MarFileSink.h WekaSink.h MFCC.h SCF.h SFM.h \
WaveletPyramid.h WaveletStep.h Daub4.h OnePole.h RtAudio.h RtError.h Accumulator.h \
NetworkSocket.h NetworkTCPSource.h NetworkUDPSource.h \
NetworkTCPSink.h NetworkUDPSink.h SocketException.h Talk.h \
TimeLine.h Color.h Communicator.h Server.h AbsMax.h FullWaveRectifier.h \
Norm.h DownSampler.h WaveletBands.h Sum.h \
PeakPeriods2BPM.h Histogram.h BeatHistoFeatures.h MslModel.h \
CommandLineOptions.h RawFileSource.h FM.h \
ANN_node.h Annotator.h ZeroRClassifier.h KNNClassifier.h Filter.h \
Kurtosis.h Skewness.h ERB.h CollectionFileSource.h MeddisHairCell.h ViconFileSource.h Cascade.h Parallel.h SeneffEar.h MP3FileSource.h ClassOutputSink.h ClipAudioRange.h SilenceRemove.h RtMidi.h Stk.h Limiter.h CompExp.h NoiseGate.h NoiseSource.h Plucked.h Delay.h NormMaxMin.h HarmonicEnhancer.h Reassign.h Normalize.h AMDF.h SMO.h SOM.h LPC.h LPCwarped.h LPCResyn.h WekaSource.h MemorySource.h config.h MidiInput.h MATLABengine.h dsound.h 


lib_LIBRARIES = libmarsyas.a

libmarsyas_a_SOURCES = MrsLog.cpp \
VScheduler.cpp Scheduler.cpp ScheduledEvent.cpp \
TmTimer.cpp TmTime.cpp TmSampleCount.cpp TmGetTime.cpp \
MarEvent.cpp EvGetUpd.cpp EvValUpd.cpp EvExpUpd.cpp Expression.cpp Repeat.cpp \
realvec.cpp \
SoundFileSource.cpp AuFileSource.cpp \
WavFileSource.cpp BaseAudioSink.cpp \
AudioSource.cpp AudioSink.cpp SoundFileSink.cpp \
AuFileSink.cpp WavFileSink.cpp FileName.cpp MarSystem.cpp \
MarControls.cpp MarControlValue.cpp \
Gain.cpp Spectrum.cpp InvSpectrum.cpp \
Collection.cpp fft.cpp Rms.cpp PlotSink.cpp \
AutoCorrelation.cpp Peaker.cpp Peaker1.cpp HalfWaveRectifier.cpp \
TimeStretch.cpp Conversions.cpp MaxArgMax.cpp MinArgMin.cpp \
Composite.cpp Series.cpp \
ShiftInput.cpp ShiftOutput.cpp PvFold.cpp PvConvert.cpp \
PvConvolve.cpp PvOscBank.cpp PvUnconvert.cpp PvOverlapadd.cpp Hamming.cpp \
Fanout.cpp Fanin.cpp Negative.cpp SineSource.cpp MarSystemManager.cpp \
PowerSpectrum.cpp Centroid.cpp Rolloff.cpp \
Flux.cpp Memory.cpp Mean.cpp StandardDeviation.cpp ZeroCrossings.cpp \
Thread.cpp Socket.cpp Messager.cpp GaussianClassifier.cpp AbsSoundFileSink.cpp AbsSoundFileSource.cpp \
Confidence.cpp MarFileSink.cpp WekaSink.cpp MFCC.cpp SCF.cpp SFM.cpp \
WaveletPyramid.cpp WaveletStep.cpp Daub4.cpp OnePole.cpp RtAudio.cpp Accumulator.cpp \
NetworkSocket.cpp NetworkTCPSource.cpp NetworkUDPSource.cpp \
NetworkTCPSink.cpp NetworkUDPSink.cpp Talk.cpp \
TimeLine.cpp Color.cpp Communicator.cpp Server.cpp AbsMax.cpp FullWaveRectifier.cpp \
Norm.cpp DownSampler.cpp WaveletBands.cpp Sum.cpp \
PeakPeriods2BPM.cpp Histogram.cpp BeatHistoFeatures.cpp MslModel.cpp \
CommandLineOptions.cpp RawFileSource.cpp FM.cpp \
ANN_node.cpp Annotator.cpp ZeroRClassifier.cpp KNNClassifier.cpp Filter.cpp \
Kurtosis.cpp Skewness.cpp AMDF.cpp SMO.cpp SOM.cpp LPC.cpp LPCwarped.cpp LPCResyn.cpp ERB.cpp CollectionFileSource.cpp MeddisHairCell.cpp ViconFileSource.cpp Cascade.cpp Parallel.cpp SeneffEar.cpp MP3FileSource.cpp ClassOutputSink.cpp ClipAudioRange.cpp SilenceRemove.cpp \
RtMidi.cpp Stk.cpp Limiter.cpp NoiseSource.cpp CompExp.cpp NoiseGate.cpp Plucked.cpp Delay.cpp NormMaxMin.cpp HarmonicEnhancer.cpp Reassign.cpp Normalize.cpp WekaSource.cpp MemorySource.cpp MidiInput.cpp MATLABengine.cpp

subdir = marsyas
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libmarsyas_a_AR = $(AR) cru
libmarsyas_a_LIBADD =
am_libmarsyas_a_OBJECTS = MrsLog.$(OBJEXT) VScheduler.$(OBJEXT) \
	Scheduler.$(OBJEXT) ScheduledEvent.$(OBJEXT) TmTimer.$(OBJEXT) \
	TmTime.$(OBJEXT) TmSampleCount.$(OBJEXT) TmGetTime.$(OBJEXT) \
	MarEvent.$(OBJEXT) EvGetUpd.$(OBJEXT) EvValUpd.$(OBJEXT) \
	EvExpUpd.$(OBJEXT) Expression.$(OBJEXT) Repeat.$(OBJEXT) \
	realvec.$(OBJEXT) SoundFileSource.$(OBJEXT) \
	AuFileSource.$(OBJEXT) WavFileSource.$(OBJEXT) \
	BaseAudioSink.$(OBJEXT) AudioSource.$(OBJEXT) \
	AudioSink.$(OBJEXT) SoundFileSink.$(OBJEXT) \
	AuFileSink.$(OBJEXT) WavFileSink.$(OBJEXT) FileName.$(OBJEXT) \
	MarSystem.$(OBJEXT) MarControls.$(OBJEXT) \
	MarControlValue.$(OBJEXT) Gain.$(OBJEXT) Spectrum.$(OBJEXT) \
	InvSpectrum.$(OBJEXT) Collection.$(OBJEXT) fft.$(OBJEXT) \
	Rms.$(OBJEXT) PlotSink.$(OBJEXT) AutoCorrelation.$(OBJEXT) \
	Peaker.$(OBJEXT) Peaker1.$(OBJEXT) HalfWaveRectifier.$(OBJEXT) \
	TimeStretch.$(OBJEXT) Conversions.$(OBJEXT) MaxArgMax.$(OBJEXT) \
	MinArgMin.$(OBJEXT) Composite.$(OBJEXT) Series.$(OBJEXT) \
	ShiftInput.$(OBJEXT) ShiftOutput.$(OBJEXT) PvFold.$(OBJEXT) \
	PvConvert.$(OBJEXT) PvConvolve.$(OBJEXT) PvOscBank.$(OBJEXT) \
	PvUnconvert.$(OBJEXT) PvOverlapadd.$(OBJEXT) Hamming.$(OBJEXT) \
	Fanout.$(OBJEXT) Fanin.$(OBJEXT) Negative.$(OBJEXT) \
	SineSource.$(OBJEXT) MarSystemManager.$(OBJEXT) \
	PowerSpectrum.$(OBJEXT) Centroid.$(OBJEXT) Rolloff.$(OBJEXT) \
	Flux.$(OBJEXT) Memory.$(OBJEXT) Mean.$(OBJEXT) \
	StandardDeviation.$(OBJEXT) ZeroCrossings.$(OBJEXT) \
	Thread.$(OBJEXT) Socket.$(OBJEXT) Messager.$(OBJEXT) \
	GaussianClassifier.$(OBJEXT) AbsSoundFileSink.$(OBJEXT) \
	AbsSoundFileSource.$(OBJEXT) Confidence.$(OBJEXT) \
	MarFileSink.$(OBJEXT) WekaSink.$(OBJEXT) MFCC.$(OBJEXT) \
	SCF.$(OBJEXT) SFM.$(OBJEXT) WaveletPyramid.$(OBJEXT) \
	WaveletStep.$(OBJEXT) Daub4.$(OBJEXT) OnePole.$(OBJEXT) \
	RtAudio.$(OBJEXT) Accumulator.$(OBJEXT) NetworkSocket.$(OBJEXT) \
	NetworkTCPSource.$(OBJEXT) NetworkUDPSource.$(OBJEXT) \
	NetworkTCPSink.$(OBJEXT) NetworkUDPSink.$(OBJEXT) \
	Talk.$(OBJEXT) TimeLine.$(OBJEXT) Color.$(OBJEXT) \
	Communicator.$(OBJEXT) Server.$(OBJEXT) AbsMax.$(OBJEXT) \
	FullWaveRectifier.$(OBJEXT) Norm.$(OBJEXT) \
	DownSampler.$(OBJEXT) WaveletBands.$(OBJEXT) Sum.$(OBJEXT) \
	PeakPeriods2BPM.$(OBJEXT) Histogram.$(OBJEXT) \
	BeatHistoFeatures.$(OBJEXT) MslModel.$(OBJEXT) \
	CommandLineOptions.$(OBJEXT) RawFileSource.$(OBJEXT) \
	FM.$(OBJEXT) ANN_node.$(OBJEXT) Annotator.$(OBJEXT) \
	ZeroRClassifier.$(OBJEXT) KNNClassifier.$(OBJEXT) \
	Filter.$(OBJEXT) Kurtosis.$(OBJEXT) Skewness.$(OBJEXT) \
	AMDF.$(OBJEXT) SMO.$(OBJEXT) SOM.$(OBJEXT) LPC.$(OBJEXT) \
	LPCwarped.$(OBJEXT) LPCResyn.$(OBJEXT) ERB.$(OBJEXT) \
	CollectionFileSource.$(OBJEXT) MeddisHairCell.$(OBJEXT) \
	ViconFileSource.$(OBJEXT) Cascade.$(OBJEXT) Parallel.$(OBJEXT) \
	SeneffEar.$(OBJEXT) MP3FileSource.$(OBJEXT) \
	ClassOutputSink.$(OBJEXT) ClipAudioRange.$(OBJEXT) \
	SilenceRemove.$(OBJEXT) RtMidi.$(OBJEXT) Stk.$(OBJEXT) \
	Limiter.$(OBJEXT) NoiseSource.$(OBJEXT) CompExp.$(OBJEXT) \
	NoiseGate.$(OBJEXT) Plucked.$(OBJEXT) Delay.$(OBJEXT) \
	NormMaxMin.$(OBJEXT) HarmonicEnhancer.$(OBJEXT) \
	Reassign.$(OBJEXT) Normalize.$(OBJEXT) WekaSource.$(OBJEXT) \
	MemorySource.$(OBJEXT) MidiInput.$(OBJEXT) \
	MATLABengine.$(OBJEXT)
libmarsyas_a_OBJECTS = $(am_libmarsyas_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/AMDF.Po ./$(DEPDIR)/ANN_node.Po \
	./$(DEPDIR)/AbsMax.Po \
	./$(DEPDIR)/AbsSoundFileSink.Po \
	./$(DEPDIR)/AbsSoundFileSource.Po \
	./$(DEPDIR)/Accumulator.Po ./$(DEPDIR)/Annotator.Po \
	./$(DEPDIR)/AuFileSink.Po \
	./$(DEPDIR)/AuFileSource.Po \
	./$(DEPDIR)/AudioSink.Po ./$(DEPDIR)/AudioSource.Po \
	./$(DEPDIR)/AutoCorrelation.Po \
	./$(DEPDIR)/BaseAudioSink.Po \
	./$(DEPDIR)/BeatHistoFeatures.Po \
	./$(DEPDIR)/Cascade.Po ./$(DEPDIR)/Centroid.Po \
	./$(DEPDIR)/ClassOutputSink.Po \
	./$(DEPDIR)/ClipAudioRange.Po \
	./$(DEPDIR)/Collection.Po \
	./$(DEPDIR)/CollectionFileSource.Po \
	./$(DEPDIR)/Color.Po \
	./$(DEPDIR)/CommandLineOptions.Po \
	./$(DEPDIR)/Communicator.Po ./$(DEPDIR)/CompExp.Po \
	./$(DEPDIR)/Composite.Po ./$(DEPDIR)/Confidence.Po \
	./$(DEPDIR)/Conversions.Po ./$(DEPDIR)/Daub4.Po \
	./$(DEPDIR)/Delay.Po ./$(DEPDIR)/DownSampler.Po \
	./$(DEPDIR)/ERB.Po ./$(DEPDIR)/EvExpUpd.Po \
	./$(DEPDIR)/EvGetUpd.Po ./$(DEPDIR)/EvValUpd.Po \
	./$(DEPDIR)/Expression.Po ./$(DEPDIR)/FM.Po \
	./$(DEPDIR)/Fanin.Po ./$(DEPDIR)/Fanout.Po \
	./$(DEPDIR)/FileName.Po ./$(DEPDIR)/Filter.Po \
	./$(DEPDIR)/Flux.Po \
	./$(DEPDIR)/FullWaveRectifier.Po \
	./$(DEPDIR)/Gain.Po \
	./$(DEPDIR)/GaussianClassifier.Po \
	./$(DEPDIR)/HalfWaveRectifier.Po \
	./$(DEPDIR)/Hamming.Po \
	./$(DEPDIR)/HarmonicEnhancer.Po \
	./$(DEPDIR)/Histogram.Po ./$(DEPDIR)/InvSpectrum.Po \
	./$(DEPDIR)/KNNClassifier.Po \
	./$(DEPDIR)/Kurtosis.Po ./$(DEPDIR)/LPC.Po \
	./$(DEPDIR)/LPCResyn.Po ./$(DEPDIR)/LPCwarped.Po \
	./$(DEPDIR)/Limiter.Po ./$(DEPDIR)/MATLABengine.Po \
	./$(DEPDIR)/MFCC.Po ./$(DEPDIR)/MP3FileSource.Po \
	./$(DEPDIR)/MarControlValue.Po \
	./$(DEPDIR)/MarControls.Po ./$(DEPDIR)/MarEvent.Po \
	./$(DEPDIR)/MarFileSink.Po ./$(DEPDIR)/MarSystem.Po \
	./$(DEPDIR)/MarSystemManager.Po \
	./$(DEPDIR)/MaxArgMax.Po ./$(DEPDIR)/Mean.Po \
	./$(DEPDIR)/MeddisHairCell.Po ./$(DEPDIR)/Memory.Po \
	./$(DEPDIR)/MemorySource.Po ./$(DEPDIR)/Messager.Po \
	./$(DEPDIR)/MidiInput.Po ./$(DEPDIR)/MinArgMin.Po \
	./$(DEPDIR)/MrsLog.Po ./$(DEPDIR)/MslModel.Po \
	./$(DEPDIR)/Negative.Po \
	./$(DEPDIR)/NetworkSocket.Po \
	./$(DEPDIR)/NetworkTCPSink.Po \
	./$(DEPDIR)/NetworkTCPSource.Po \
	./$(DEPDIR)/NetworkUDPSink.Po \
	./$(DEPDIR)/NetworkUDPSource.Po \
	./$(DEPDIR)/NoiseGate.Po ./$(DEPDIR)/NoiseSource.Po \
	./$(DEPDIR)/Norm.Po ./$(DEPDIR)/NormMaxMin.Po \
	./$(DEPDIR)/Normalize.Po ./$(DEPDIR)/OnePole.Po \
	./$(DEPDIR)/Parallel.Po \
	./$(DEPDIR)/PeakPeriods2BPM.Po \
	./$(DEPDIR)/Peaker.Po ./$(DEPDIR)/Peaker1.Po \
	./$(DEPDIR)/PlotSink.Po ./$(DEPDIR)/Plucked.Po \
	./$(DEPDIR)/PowerSpectrum.Po \
	./$(DEPDIR)/PvConvert.Po ./$(DEPDIR)/PvConvolve.Po \
	./$(DEPDIR)/PvFold.Po ./$(DEPDIR)/PvOscBank.Po \
	./$(DEPDIR)/PvOverlapadd.Po \
	./$(DEPDIR)/PvUnconvert.Po \
	./$(DEPDIR)/RawFileSource.Po \
	./$(DEPDIR)/Reassign.Po ./$(DEPDIR)/Repeat.Po \
	./$(DEPDIR)/Rms.Po ./$(DEPDIR)/Rolloff.Po \
	./$(DEPDIR)/RtAudio.Po ./$(DEPDIR)/RtMidi.Po \
	./$(DEPDIR)/SCF.Po ./$(DEPDIR)/SFM.Po \
	./$(DEPDIR)/SMO.Po ./$(DEPDIR)/SOM.Po \
	./$(DEPDIR)/ScheduledEvent.Po \
	./$(DEPDIR)/Scheduler.Po ./$(DEPDIR)/SeneffEar.Po \
	./$(DEPDIR)/Series.Po ./$(DEPDIR)/Server.Po \
	./$(DEPDIR)/ShiftInput.Po \
	./$(DEPDIR)/ShiftOutput.Po \
	./$(DEPDIR)/SilenceRemove.Po \
	./$(DEPDIR)/SineSource.Po ./$(DEPDIR)/Skewness.Po \
	./$(DEPDIR)/Socket.Po ./$(DEPDIR)/SoundFileSink.Po \
	./$(DEPDIR)/SoundFileSource.Po \
	./$(DEPDIR)/Spectrum.Po \
	./$(DEPDIR)/StandardDeviation.Po ./$(DEPDIR)/Stk.Po \
	./$(DEPDIR)/Sum.Po ./$(DEPDIR)/Talk.Po \
	./$(DEPDIR)/Thread.Po ./$(DEPDIR)/TimeLine.Po \
	./$(DEPDIR)/TimeStretch.Po ./$(DEPDIR)/TmGetTime.Po \
	./$(DEPDIR)/TmSampleCount.Po ./$(DEPDIR)/TmTime.Po \
	./$(DEPDIR)/TmTimer.Po ./$(DEPDIR)/VScheduler.Po \
	./$(DEPDIR)/ViconFileSource.Po \
	./$(DEPDIR)/WavFileSink.Po \
	./$(DEPDIR)/WavFileSource.Po \
	./$(DEPDIR)/WaveletBands.Po \
	./$(DEPDIR)/WaveletPyramid.Po \
	./$(DEPDIR)/WaveletStep.Po ./$(DEPDIR)/WekaSink.Po \
	./$(DEPDIR)/WekaSource.Po \
	./$(DEPDIR)/ZeroCrossings.Po \
	./$(DEPDIR)/ZeroRClassifier.Po ./$(DEPDIR)/fft.Po \
	./$(DEPDIR)/realvec.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(libmarsyas_a_SOURCES)
HEADERS = $(pkginclude_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.in Makefile.am \
	config.h.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libmarsyas_a_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  marsyas/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status marsyas/config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libmarsyas.a: $(libmarsyas_a_OBJECTS) $(libmarsyas_a_DEPENDENCIES) 
	-rm -f libmarsyas.a
	$(libmarsyas_a_AR) libmarsyas.a $(libmarsyas_a_OBJECTS) $(libmarsyas_a_LIBADD)
	$(RANLIB) libmarsyas.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AMDF.Po
include ./$(DEPDIR)/ANN_node.Po
include ./$(DEPDIR)/AbsMax.Po
include ./$(DEPDIR)/AbsSoundFileSink.Po
include ./$(DEPDIR)/AbsSoundFileSource.Po
include ./$(DEPDIR)/Accumulator.Po
include ./$(DEPDIR)/Annotator.Po
include ./$(DEPDIR)/AuFileSink.Po
include ./$(DEPDIR)/AuFileSource.Po
include ./$(DEPDIR)/AudioSink.Po
include ./$(DEPDIR)/AudioSource.Po
include ./$(DEPDIR)/AutoCorrelation.Po
include ./$(DEPDIR)/BaseAudioSink.Po
include ./$(DEPDIR)/BeatHistoFeatures.Po
include ./$(DEPDIR)/Cascade.Po
include ./$(DEPDIR)/Centroid.Po
include ./$(DEPDIR)/ClassOutputSink.Po
include ./$(DEPDIR)/ClipAudioRange.Po
include ./$(DEPDIR)/Collection.Po
include ./$(DEPDIR)/CollectionFileSource.Po
include ./$(DEPDIR)/Color.Po
include ./$(DEPDIR)/CommandLineOptions.Po
include ./$(DEPDIR)/Communicator.Po
include ./$(DEPDIR)/CompExp.Po
include ./$(DEPDIR)/Composite.Po
include ./$(DEPDIR)/Confidence.Po
include ./$(DEPDIR)/Conversions.Po
include ./$(DEPDIR)/Daub4.Po
include ./$(DEPDIR)/Delay.Po
include ./$(DEPDIR)/DownSampler.Po
include ./$(DEPDIR)/ERB.Po
include ./$(DEPDIR)/EvExpUpd.Po
include ./$(DEPDIR)/EvGetUpd.Po
include ./$(DEPDIR)/EvValUpd.Po
include ./$(DEPDIR)/Expression.Po
include ./$(DEPDIR)/FM.Po
include ./$(DEPDIR)/Fanin.Po
include ./$(DEPDIR)/Fanout.Po
include ./$(DEPDIR)/FileName.Po
include ./$(DEPDIR)/Filter.Po
include ./$(DEPDIR)/Flux.Po
include ./$(DEPDIR)/FullWaveRectifier.Po
include ./$(DEPDIR)/Gain.Po
include ./$(DEPDIR)/GaussianClassifier.Po
include ./$(DEPDIR)/HalfWaveRectifier.Po
include ./$(DEPDIR)/Hamming.Po
include ./$(DEPDIR)/HarmonicEnhancer.Po
include ./$(DEPDIR)/Histogram.Po
include ./$(DEPDIR)/InvSpectrum.Po
include ./$(DEPDIR)/KNNClassifier.Po
include ./$(DEPDIR)/Kurtosis.Po
include ./$(DEPDIR)/LPC.Po
include ./$(DEPDIR)/LPCResyn.Po
include ./$(DEPDIR)/LPCwarped.Po
include ./$(DEPDIR)/Limiter.Po
include ./$(DEPDIR)/MATLABengine.Po
include ./$(DEPDIR)/MFCC.Po
include ./$(DEPDIR)/MP3FileSource.Po
include ./$(DEPDIR)/MarControlValue.Po
include ./$(DEPDIR)/MarControls.Po
include ./$(DEPDIR)/MarEvent.Po
include ./$(DEPDIR)/MarFileSink.Po
include ./$(DEPDIR)/MarSystem.Po
include ./$(DEPDIR)/MarSystemManager.Po
include ./$(DEPDIR)/MaxArgMax.Po
include ./$(DEPDIR)/Mean.Po
include ./$(DEPDIR)/MeddisHairCell.Po
include ./$(DEPDIR)/Memory.Po
include ./$(DEPDIR)/MemorySource.Po
include ./$(DEPDIR)/Messager.Po
include ./$(DEPDIR)/MidiInput.Po
include ./$(DEPDIR)/MinArgMin.Po
include ./$(DEPDIR)/MrsLog.Po
include ./$(DEPDIR)/MslModel.Po
include ./$(DEPDIR)/Negative.Po
include ./$(DEPDIR)/NetworkSocket.Po
include ./$(DEPDIR)/NetworkTCPSink.Po
include ./$(DEPDIR)/NetworkTCPSource.Po
include ./$(DEPDIR)/NetworkUDPSink.Po
include ./$(DEPDIR)/NetworkUDPSource.Po
include ./$(DEPDIR)/NoiseGate.Po
include ./$(DEPDIR)/NoiseSource.Po
include ./$(DEPDIR)/Norm.Po
include ./$(DEPDIR)/NormMaxMin.Po
include ./$(DEPDIR)/Normalize.Po
include ./$(DEPDIR)/OnePole.Po
include ./$(DEPDIR)/Parallel.Po
include ./$(DEPDIR)/PeakPeriods2BPM.Po
include ./$(DEPDIR)/Peaker.Po
include ./$(DEPDIR)/Peaker1.Po
include ./$(DEPDIR)/PlotSink.Po
include ./$(DEPDIR)/Plucked.Po
include ./$(DEPDIR)/PowerSpectrum.Po
include ./$(DEPDIR)/PvConvert.Po
include ./$(DEPDIR)/PvConvolve.Po
include ./$(DEPDIR)/PvFold.Po
include ./$(DEPDIR)/PvOscBank.Po
include ./$(DEPDIR)/PvOverlapadd.Po
include ./$(DEPDIR)/PvUnconvert.Po
include ./$(DEPDIR)/RawFileSource.Po
include ./$(DEPDIR)/Reassign.Po
include ./$(DEPDIR)/Repeat.Po
include ./$(DEPDIR)/Rms.Po
include ./$(DEPDIR)/Rolloff.Po
include ./$(DEPDIR)/RtAudio.Po
include ./$(DEPDIR)/RtMidi.Po
include ./$(DEPDIR)/SCF.Po
include ./$(DEPDIR)/SFM.Po
include ./$(DEPDIR)/SMO.Po
include ./$(DEPDIR)/SOM.Po
include ./$(DEPDIR)/ScheduledEvent.Po
include ./$(DEPDIR)/Scheduler.Po
include ./$(DEPDIR)/SeneffEar.Po
include ./$(DEPDIR)/Series.Po
include ./$(DEPDIR)/Server.Po
include ./$(DEPDIR)/ShiftInput.Po
include ./$(DEPDIR)/ShiftOutput.Po
include ./$(DEPDIR)/SilenceRemove.Po
include ./$(DEPDIR)/SineSource.Po
include ./$(DEPDIR)/Skewness.Po
include ./$(DEPDIR)/Socket.Po
include ./$(DEPDIR)/SoundFileSink.Po
include ./$(DEPDIR)/SoundFileSource.Po
include ./$(DEPDIR)/Spectrum.Po
include ./$(DEPDIR)/StandardDeviation.Po
include ./$(DEPDIR)/Stk.Po
include ./$(DEPDIR)/Sum.Po
include ./$(DEPDIR)/Talk.Po
include ./$(DEPDIR)/Thread.Po
include ./$(DEPDIR)/TimeLine.Po
include ./$(DEPDIR)/TimeStretch.Po
include ./$(DEPDIR)/TmGetTime.Po
include ./$(DEPDIR)/TmSampleCount.Po
include ./$(DEPDIR)/TmTime.Po
include ./$(DEPDIR)/TmTimer.Po
include ./$(DEPDIR)/VScheduler.Po
include ./$(DEPDIR)/ViconFileSource.Po
include ./$(DEPDIR)/WavFileSink.Po
include ./$(DEPDIR)/WavFileSource.Po
include ./$(DEPDIR)/WaveletBands.Po
include ./$(DEPDIR)/WaveletPyramid.Po
include ./$(DEPDIR)/WaveletStep.Po
include ./$(DEPDIR)/WekaSink.Po
include ./$(DEPDIR)/WekaSource.Po
include ./$(DEPDIR)/ZeroCrossings.Po
include ./$(DEPDIR)/ZeroRClassifier.Po
include ./$(DEPDIR)/fft.Po
include ./$(DEPDIR)/realvec.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS) config.h
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-libLIBRARIES clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-recursive distclean-tags distdir dvi \
	dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive \
	install-libLIBRARIES install-man install-pkgincludeHEADERS \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am \
	pdf-recursive ps ps-am ps-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
